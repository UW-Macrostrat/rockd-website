/*
This stylesheet the overall application page layout.
*/

.map-page
  height 100vh
  /* mobile viewport bug fix */
  height: -webkit-fill-available;
  width 100vw
  display flex
  flex-direction column
  position relative

.main-ui
  flex 1
  position: relative
  display flex
  flex-direction: column
  max-height 100%

:global(.bp3-panel-stack-view)
  position: relative;
  overflow: unset

.context-stack
  display: flex
  flex-direction: column
  &>div
    flex-shrink 1
  &>.searchbar
    flex 0

// Rename left-stack to context-stack


.panel-container
  display flex
  flex-direction: column
  &>div
    pointer-events all

.panel-title
  font-size 16px



.spacer
  flex-grow 1
  pointer-events: none

.map-view-container
  flex-grow 1
  position: relative


.searchbar-holder
  margin-bottom 0.5em

:global
  #map {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    width: 100%;
  }


/* For mobile phones, we want to make the most of screen space,
 which in some cases means adding complications to the basic page. */
@media only screen and (max-width: 768px)

  // Move the search bar and context panel to the bottom of the screen
  .context-stack
    display flex
    order 1
    flex-direction: column-reverse
    max-height: 80%

  .main-ui.detail-panel-open .searchbar
    display none

/* Desktop styling is necessarily much more complicated than mobile
  to handle a two-column layout. */
@media screen and (min-width: 768px)

  .main-ui
    flex-direction row
    padding 1em 1em 2em
    &>*
      margin-right 0.5em
      &:last-child
        margin-right 0

  .context-stack
    max-width 34em
    min-width 14em

  .detail-stack
    width 30em
    // position absolute
    // right 0px
    // top 0px
    // bottom: 0px
    pointer-events none
    display flex
    flex-direction column

  .context-stack,.detail-stack
    pointer-events: none
    z-index: 100
    &>div
      pointer-events: all
      margin-bottom: 0.5em

  /* Make map fill page rather than containing div,
    by unsetting map position */
  .map-view-container
    position: unset

  // .map-holder
  //   z-index: 1;
  //   position: absolute;
  //   top 0
  //   left 0
  //   bottom 0
  //   right 0
  //   height 100%

// padding: env(safe-area-inset-top) env(safe-area-inset-right) env(safe-area-inset-bottom) env(safe-area-inset-left);

